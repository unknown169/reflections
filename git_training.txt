lesson 1:
FC command on windows to compare 2 files
diff -u on mac to compare 2 files
‘git log’  to get info about changes
git config --global color.ui auto   to add color to the changes
‘q’ to quit git log
git diff <first id  second id>  to compare changes
‘git checkout’ lets you get and test older versions based on their ID
git clone to clone a repository

lesson 2:
‘git init’ to initialize/create a new repository
HEAD is gits name for the current commit
‘git status’ shows which files changed since last commit
git add <file name>  to add files to staging area before commit
git diff —-staged   shows changes between staged and repository
git reset —-hard   discards changes to staged and working area  !DANGER!  can lose data
git branch   shows the current working branch (*)
git branch <branch name>   creates a branch with the specified name
git checkout <branch name>   puts you in the working branch (*)
git log --graph --oneline <branch(s)> gives a visual representation of the commit history
switch to master before merging
git merge master <branch>  to merge them git log will show the merge commit
‘git show’ will show the diff between a commit and its parent
git branch -d  will delete the branch label w/o losing the actual changes
git log -n 1  gets last commit

lesson 3:
git remote   will show the remote’s name -v for verbose to show more info
git remote add <origin <web address>>  origin is typical name for one remote
git push <remote name> <branch>  git push origin master to move data to github